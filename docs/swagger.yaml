definitions:
  goca.CAData:
    properties:
      certificate:
        description: Certificate string
        example: |
          -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----
        type: string
      crl:
        description: Revocation List string
        example: |
          -----BEGIN X509 CRL-----...-----END X509 CRL-----
        type: string
      csr:
        description: Certificate Signing Request string
        example: |
          -----BEGIN CERTIFICATE REQUEST-----...-----END CERTIFICATE REQUEST-----
        type: string
      isIntermediate:
        type: boolean
      private_key:
        description: Private Key string
        example: |
          -----BEGIN PRIVATE KEY-----...-----END PRIVATE KEY-----
        type: string
      public_key:
        description: Public Key string
        example: |
          -----BEGIN PUBLIC KEY-----...-----END PUBLIC KEY-----
        type: string
    type: object
  goca.Certificate:
    properties:
      ca_certificate:
        description: CA Certificate as string
        example: |
          -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----
        type: string
      certificate:
        description: Certificate certificate string
        example: |
          -----BEGIN CERTIFICATE-----...-----END CERTIFICATE-----
        type: string
      csr:
        description: Certificate Signing Request string
        example: |
          -----BEGIN CERTIFICATE REQUEST-----...-----END CERTIFICATE REQUEST-----
        type: string
      private_key:
        description: Certificate Private Key string
        example: |
          -----BEGIN PRIVATE KEY-----...-----END PRIVATE KEY-----
        type: string
      public_key:
        description: Certificate Public Key string
        example: |
          -----BEGIN PUBLIC KEY-----...-----END PUBLIC KEY-----
        type: string
    type: object
  models.CABody:
    properties:
      certificates:
        example:
        - intranet.example.com
        - w3.example.com
        items:
          type: string
        type: array
      common_name:
        example: root-ca
        type: string
      csr:
        example: false
        type: boolean
      dns_names:
        example:
        - ca.example.ca
        - root-ca.example.com
        items:
          type: string
        type: array
      expire_date:
        example: 2022-01-06 10:31:43 +0000 UTC
        type: string
      files:
        $ref: '#/definitions/goca.CAData'
      intermediate:
        type: boolean
      ip_addresses:
        example:
        - 127.0.0.1
        - 192.168.2.1
        items:
          type: string
        type: array
      issue_date:
        example: 2021-01-06 10:31:43 +0000 UTC
        type: string
      revoked_certificates:
        example:
        - "38188836191244388427366318074605547405"
        - "338255903472757769326153358304310617728"
        items:
          type: string
        type: array
      serial_number:
        example: "271064285308788403797280326571490069716"
        type: string
      status:
        example: Certificate Authority is ready.
        type: string
    type: object
  models.CertificateBody:
    properties:
      common_name:
        example: intranet.go-root
        type: string
      dns_names:
        example:
        - w3.intranet.go-root.ca
        - intranet.go-root.ca
        items:
          type: string
        type: array
      expire_date:
        example: 2022-01-06 10:31:43 +0000 UTC
        type: string
      files:
        $ref: '#/definitions/goca.Certificate'
      ip_addresses:
        example:
        - 127.0.0.1
        - 192.168.0.1
        items:
          type: string
        type: array
      issue_date:
        example: 2021-01-06 10:31:43 +0000 UTC
        type: string
      serial_number:
        example: "338255903472757769326153358304310617728"
        type: string
    type: object
  models.Payload:
    properties:
      common_name:
        example: root-ca
        type: string
      identity:
        $ref: '#/definitions/models.PayloadIdentity'
      parent_common_name:
        example: root-ca
        type: string
    required:
    - common_name
    - identity
    type: object
  models.PayloadIdentity:
    properties:
      country:
        description: Country (two letters)
        example: NL
        type: string
      dns_names:
        description: DNS Names list
        example:
        - ca.example.com
        - root-ca.example.com
        items:
          type: string
        type: array
      email:
        description: Email Address
        example: sec@company.com
        type: string
      intermediate:
        description: Intermendiate Certificate Authority (default is false)
        example: false
        type: boolean
      ip_addresses:
        description: IP Address list
        example:
        - 127.0.0.1
        - 192.168.0.1
        items:
          type: string
        type: array
      key_size:
        description: 'Key Bit Size (defaul: 2048)'
        example: 2048
        type: integer
      locality:
        description: Locality name
        example: Noord-Brabant
        type: string
      organization:
        description: Organization name
        example: Company
        type: string
      organization_unit:
        description: Organizational Unit name
        example: Security Management
        type: string
      province:
        description: Province name
        example: Veldhoven
        type: string
      valid:
        description: 'Minimum 1 day, maximum 825 days -- Default: 397'
        example: 365
        type: integer
    type: object
  models.ResponseCA:
    properties:
      data:
        $ref: '#/definitions/models.CABody'
    type: object
  models.ResponseCertificates:
    properties:
      data:
        $ref: '#/definitions/models.CertificateBody'
    type: object
  models.ResponseError:
    properties:
      error:
        example: error message
        type: string
    type: object
  models.ResponseList:
    properties:
      data:
        example:
        - cn1
        - cn2
        - cn3
        items:
          type: string
        type: array
    type: object
info:
  contact:
    name: GoCA API Issues Report
    url: http://github.com/kairoaraujo/goca/issues
  description: GoCA Certificate Authority Management API.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: GoCA API
paths:
  /api/v1/ca:
    get:
      description: list all the Certificate Authorities
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseList'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: List Certificate Authorities (CA)
      tags:
      - CA
    post:
      consumes:
      - application/json
      description: create a new Certificate Authority Root or Intermediate
      parameters:
      - description: Add new Certificate Authority or Intermediate Certificate Authority
        in: body
        name: json_payload
        required: true
        schema:
          $ref: '#/definitions/models.Payload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCA'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: Create new Certificate Authorities (CA) or Intermediate Certificate
        Authorities (ICA)
      tags:
      - CA
  /api/v1/ca/{cn}:
    get:
      description: list the Certificate Authorities data
      parameters:
      - description: Common Name
        in: path
        name: cn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCA'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: Certificate Authorities (CA) Information based in Common Name
      tags:
      - CA
  /api/v1/ca/{cn}/certificates:
    get:
      description: list all certificates managed by a certain Certificate Authority
        (cn)
      parameters:
      - description: Common Name of the Certificate Authority
        in: path
        name: cn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCA'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: List all Certificates managed by a certain Certificate Authority
      tags:
      - CA/{CN}/Certificates
    post:
      consumes:
      - application/json
      description: the Certificate Authority issues a new Certificate
      parameters:
      - description: Common Name of the Certificate Authority
        in: path
        name: cn
        required: true
        type: string
      - description: Add new Certificate Authority or Intermediate Certificate Authority
        in: body
        name: ca
        required: true
        schema:
          $ref: '#/definitions/models.Payload'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCertificates'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: CA issue new certificate
      tags:
      - CA/{CN}/Certificates
  /api/v1/ca/{cn}/certificates/{certificate_cn}:
    delete:
      consumes:
      - application/json
      description: the Certificate Authority revokes a managed Certificate
      parameters:
      - description: Common Name of the Certificate Authority
        in: path
        name: cn
        required: true
        type: string
      - description: Common Name of Certificate
        in: path
        name: certificate_cn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.CABody'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: CA revoke a existent certificate managed by CA
      tags:
      - CA/{CN}/Certificates
    get:
      description: get information about a certificate issued by a certain CA
      parameters:
      - description: Common Name of the Certificate Authority
        in: path
        name: cn
        required: true
        type: string
      - description: Common Name of Certificate
        in: path
        name: certificate_cn
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCertificates'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: Get information about a Certificate
      tags:
      - CA/{CN}/Certificates
  /api/v1/ca/{cn}/sign:
    post:
      consumes:
      - application/json
      description: create a new certificate signing a Certificate Sigining Request
        (CSR)
      parameters:
      - description: Attached CSR file
        in: formData
        name: file
        required: true
        type: file
      - description: Number certificate valid days
        in: query
        name: valid
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCertificates'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: Certificate Authorities (CA) Signer for Certificate Sigining Request
        (CSR)
      tags:
      - CA
  /api/v1/ca/{cn}/upload:
    post:
      description: Upload a Certificate to a ICA pending certificate
      parameters:
      - description: Attached signed Certificate file
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ResponseCA'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ResponseError'
        "500":
          description: Internal Server Error
          schema:
            type: Internal
      summary: Upload a Certificate to an Intermediate CA
      tags:
      - CA
schemes:
- http
- https
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
